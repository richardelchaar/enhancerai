## Model name
CatBoost (Categorical Boosting)

## Example Python code
import catboost as cb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np

# 1. Generate synthetic data (replace with your actual data)
np.random.seed(42)
X = np.random.rand(1000, 10) * 100  # 1000 samples, 10 features
y = 2 * X[:, 0] + 3 * X[:, 1] - 0.5 * X[:, 2] + np.random.randn(1000) * 5 + 50 # Example target dependent on features

# 2. Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Initialize and train the CatBoost Regressor model
# 'iterations' is similar to n_estimators
# 'learning_rate' controls the step size shrinkage
# CatBoost handles categorical features automatically if specified via 'cat_features' parameter.
# For this synthetic example, all features are numerical.
model_cat = cb.CatBoostRegressor(iterations=100, learning_rate=0.1, random_seed=42, verbose=False) # verbose=False to suppress training output
model_cat.fit(X_train, y_train)

# 4. Make predictions
y_pred_cat = model_cat.predict(X_test)

# 5. Calculate Root Mean Squared Error (RMSE)
rmse_cat = np.sqrt(mean_squared_error(y_test, y_pred_cat))
print(f"CatBoost RMSE: {rmse_cat:.4f}")