## Model name
LightGBM Regressor

## Example Python code

import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np
import pandas as pd

# 1. Generate synthetic data
X = pd.DataFrame(np.random.rand(1000, 10), columns=[f'feature_{i}' for i in range(10)])
y = pd.Series(5 * X['feature_0'] + 2 * X['feature_1'] + np.random.randn(1000) * 0.5)

# 2. Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Initialize and train the LightGBM Regressor model
# objective='regression' and metric='rmse' are suitable for this task
lgbm_model = lgb.LGBMRegressor(objective='regression', metric='rmse', random_state=42)
lgbm_model.fit(X_train, y_train)

# 4. Make predictions
y_pred = lgbm_model.predict(X_test)

# 5. Evaluate the model using RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"LightGBM RMSE: {rmse:.4f}")
