## Model name
LightGBM Regressor

## Example Python code
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np

# Assuming X, y are your features and target variable
# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# For demonstration, let's create dummy data
np.random.seed(42)
X_train = np.random.rand(100, 10)
y_train = np.random.rand(100) * 100
X_test = np.random.rand(50, 10)
y_test = np.random.rand(50) * 100

# Initialize and train the LightGBM Regressor
# 'objective': 'regression' is for standard regression
# 'metric': 'rmse' directly optimizes for Root Mean Squared Error
model = lgb.LGBMRegressor(objective='regression', metric='rmse', random_state=42)
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model using RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"LightGBM RMSE: {rmse}")