## Model name
LightGBM (Light Gradient Boosting Machine)

## Example Python code
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np
import pandas as pd
from sklearn.datasets import fetch_california_housing

# Load a sample tabular dataset (California Housing)
california_housing = fetch_california_housing(as_frame=True)
X = california_housing.data
y = california_housing.target

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize LightGBM Regressor model
# objective='regression' specifies it's a regression task
# metric='rmse' sets Root Mean Squared Error as the evaluation metric
lgbm_model = lgb.LGBMRegressor(objective='regression', metric='rmse', random_state=42)

# Train the model
lgbm_model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = lgbm_model.predict(X_test)

# Evaluate the model using RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"LightGBM RMSE: {rmse:.4f}")