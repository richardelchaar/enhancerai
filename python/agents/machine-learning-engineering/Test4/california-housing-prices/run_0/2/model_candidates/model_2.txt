## Model name
XGBoost Regressor

## Example Python code
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np
from sklearn.datasets import make_regression

# Generate synthetic data for demonstration
X, y = make_regression(n_samples=1000, n_features=10, random_state=42)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize XGBoost Regressor model
# 'objective': 'reg:squarederror' is recommended for regression tasks. [2]
model = xgb.XGBRegressor(objective='reg:squarederror', eval_metric='rmse', random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"XGBoost RMSE: {rmse:.4f}")