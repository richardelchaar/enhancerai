## Model name
LightGBM (Light Gradient Boosting Machine)

## Example Python code
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.datasets import fetch_california_housing
import numpy as np

# Load a sample tabular dataset (e.g., California Housing dataset)
housing = fetch_california_housing()
X, y = housing.data, housing.target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the LGBMRegressor model
# objective='regression' or 'regression_l1' (MAE), 'regression_l2' (MSE) which is default.
# We are optimizing for RMSE, which is the square root of MSE, so 'regression_l2' is appropriate.
model_lgbm = lgb.LGBMRegressor(objective='regression_l2', metric='rmse', random_state=42)

# Train the model
model_lgbm.fit(X_train, y_train)

# Make predictions on the test set
y_pred_lgbm = model_lgbm.predict(X_test)

# Calculate RMSE
rmse_lgbm = np.sqrt(mean_squared_error(y_test, y_pred_lgbm))
print(f"LightGBM RMSE: {rmse_lgbm:.4f}")