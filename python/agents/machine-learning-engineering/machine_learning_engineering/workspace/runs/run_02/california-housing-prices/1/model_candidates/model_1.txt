## Model name
LightGBM (Light Gradient Boosting Machine)

## Example Python code
import lightgbm as lgb
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.datasets import make_regression

# 1. Generate synthetic data (replace with your actual data)
X, y = make_regression(n_samples=1000, n_features=10, random_state=42, noise=0.1)

# 2. Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Initialize and train the LightGBM Regressor
#    objective='regression' for continuous target, metric='rmse' for evaluation
model = lgb.LGBMRegressor(objective='regression', metric='rmse', random_state=42)
model.fit(X_train, y_train)

# 4. Make predictions on the test set
y_pred = model.predict(X_test)

# 5. Evaluate the model using RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"LightGBM RMSE: {rmse:.4f}")