## Model name
LightGBM

## Example Python code
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np

# Assuming X, y are your features and target
# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# --- Placeholder for data (replace with your actual data) ---
X_train = np.random.rand(100, 10)
y_train = np.random.rand(100)
X_test = np.random.rand(20, 10)
y_test = np.random.rand(20)
# ----------------------------------------------------------

# Initialize LGBM Regressor
# objective='regression_l1' or 'regression_l2' (RMSE uses squared error)
# metric='rmse' specifies the evaluation metric
model = lgb.LGBMRegressor(objective='regression', metric='rmse', random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"LightGBM RMSE: {rmse}")