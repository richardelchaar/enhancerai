## Model name
CatBoost (Categorical Boosting)

## Example Python code
from catboost import CatBoostRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.datasets import make_regression
import numpy as np
import pandas as pd

# Generate synthetic data
X, y = make_regression(n_samples=1000, n_features=9, n_informative=5, random_state=42)

# Add a categorical feature for demonstration purposes
# CatBoost handles categorical features automatically if specified
X_df = pd.DataFrame(X, columns=[f'feature_{i}' for i in range(X.shape[1])])
X_df['categorical_feature'] = np.random.choice(['A', 'B', 'C'], size=len(X))

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_df, y, test_size=0.2, random_state=42)

# Identify categorical features by name
categorical_features_indices = ['categorical_feature']

# Initialize CatBoost Regressor
model = CatBoostRegressor(iterations=100,               # Number of boosting rounds
                          learning_rate=0.1,             # Step size shrinkage
                          depth=5,                       # Depth of the tree
                          loss_function='RMSE',          # Objective for regression
                          random_seed=42,
                          verbose=0,                     # Suppress verbose output during training
                          cat_features=categorical_features_indices) # Specify categorical features

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model using RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f'CatBoost RMSE: {rmse:.4f}')
