## Model name
LightGBM (Light Gradient Boosting Machine)

## Example Python code
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.datasets import make_regression
import numpy as np

# Generate synthetic data
X, y = make_regression(n_samples=1000, n_features=10, random_state=42)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize LightGBM Regressor
model = lgb.LGBMRegressor(objective='regression',      # Specify the objective for regression
                          n_estimators=100,            # Number of boosting rounds
                          learning_rate=0.1,           # Step size shrinkage
                          num_leaves=31,               # Max number of leaves in one tree
                          random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model using RMSE
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f'LightGBM RMSE: {rmse:.4f}')
