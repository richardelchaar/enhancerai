## Model name
CatBoost Regressor

## Example Python code
from catboost import CatBoostRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.datasets import make_regression
import numpy as np

# 1. Generate synthetic tabular data
X, y = make_regression(n_samples=1000, n_features=10, n_informative=5, random_state=42)

# 2. Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Initialize CatBoost Regressor model
# 'RMSE' is the default loss function for regression in CatBoost
model = CatBoostRegressor(iterations=100,  # Number of boosting iterations (trees)
                          learning_rate=0.1, # Step size shrinkage
                          depth=6,         # Depth of trees
                          loss_function='RMSE', # Loss function to optimize
                          random_seed=42,    # For reproducibility
                          verbose=False)     # Suppress training output for conciseness

# 4. Train the model
model.fit(X_train, y_train)

# 5. Make predictions on the test set
y_pred = model.predict(X_test)

# 6. Evaluate the model using Root Mean Squared Error (RMSE)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"CatBoost RMSE: {rmse:.4f}")