## Model name
XGBoost (Extreme Gradient Boosting)

## Example Python code
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np
from sklearn.datasets import make_regression

# Generate synthetic data for regression
X, y = make_regression(n_samples=1000, n_features=10, n_informative=5, random_state=42)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize XGBoost Regressor
# objective='reg:squarederror' is the recommended objective for regression tasks to minimize squared error.
xgb_model = xgb.XGBRegressor(objective='reg:squarederror', random_state=42)

# Train the model
xgb_model.fit(X_train, y_train)

# Make predictions
y_pred_xgb = xgb_model.predict(X_test)

# Evaluate the model using RMSE
rmse_xgb = np.sqrt(mean_squared_error(y_test, y_pred_xgb))
